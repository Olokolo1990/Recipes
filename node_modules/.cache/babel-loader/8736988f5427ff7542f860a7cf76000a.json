{"ast":null,"code":"var _jsxFileName = \"/home/aleksander/Pulpit/GitHub projekty/Przepisy/recipes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Recipe from \"./Recipe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const APP_ID = \"416eec1e\";\n  const APP_KEY = \"e0d409530188da1d31411ea91e79de87\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(search);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getSearch,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-bar\",\n        type: \"text\",\n        value: search,\n        onChange: updateSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        type: \"submit\",\n        children: \" Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), recipes.map(recipe => /*#__PURE__*/_jsxDEV(Recipe, {\n      title: recipe.recipe.label,\n      calories: recipe.recipe.calories,\n      image: recipe.recipe.image\n    }, recipe.recipe.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"YrJ3pAhk9S+6gvqmWvHjFqvOFsw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aleksander/Pulpit/GitHub projekty/Przepisy/recipes/src/App.js"],"names":["React","useState","useEffect","Recipe","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","response","fetch","data","json","hits","console","log","updateSearch","e","target","value","getSearch","preventDefault","map","recipe","label","calories","image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,kCAAhB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,SAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU;AACb,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;;AAIA,QAAME,UAAU,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAiDV,MAAO,YAAWC,OAAQ,EAA7E,CAA5B;AACA,UAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,IAAAA,UAAU,CAACQ,IAAI,CAACE,IAAN,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB;AACH,GALD;;AAOA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACtBZ,IAAAA,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACH,GAHD;;AAKA,QAAMgB,SAAS,GAAGH,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACI,cAAF;AACAd,IAAAA,QAAQ,CAACH,MAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEgB,SAAhB;AAA2B,MAAA,SAAS,EAAC,aAArC;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,IAAI,EAAC,MAAnC;AAA0C,QAAA,KAAK,EAAEhB,MAAjD;AAAyD,QAAA,QAAQ,EAAEY;AAAnE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKd,OAAO,CAACoB,GAAR,CAAYC,MAAM,iBACf,QAAC,MAAD;AAEI,MAAA,KAAK,EAAEA,MAAM,CAACA,MAAP,CAAcC,KAFzB;AAGI,MAAA,QAAQ,EAAED,MAAM,CAACA,MAAP,CAAcE,QAH5B;AAII,MAAA,KAAK,EAAEF,MAAM,CAACA,MAAP,CAAcG;AAJzB,OACSH,MAAM,CAACA,MAAP,CAAcC,KADvB;AAAA;AAAA;AAAA;AAAA,YADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA7CD;;GAAMzB,G;;KAAAA,G;AAgDN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Recipe from \"./Recipe\";\n\nconst App = () => {\n\n    const APP_ID = \"416eec1e\";\n    const APP_KEY = \"e0d409530188da1d31411ea91e79de87\";\n\n    const [recipes, setRecipes] = useState([]);\n    const [search, setSearch] = useState(\"\")\n    const [query, setQuery] = useState(\"chicken\")\n\n    useEffect(() => {\n        getRecipes();\n    }, [query])\n\n    const getRecipes = async () => {\n        const response = await fetch(`https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`)\n        const data = await response.json();\n        setRecipes(data.hits);\n        console.log(data.hits);\n    }\n\n    const updateSearch = e => {\n        setSearch(e.target.value);\n        console.log(search);\n    };\n\n    const getSearch = e => {\n        e.preventDefault();\n        setQuery(search)\n    }\n\n    return (\n        <div className=\"App\">\n            <form onSubmit={getSearch} className=\"search-form\">\n                <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n                <button className=\"search-button\" type=\"submit\"> Search</button>\n            </form>\n            {recipes.map(recipe => (\n                <Recipe\n                    key={recipe.recipe.label}\n                    title={recipe.recipe.label}\n                    calories={recipe.recipe.calories}\n                    image={recipe.recipe.image}/>\n            ))};\n        </div>\n    );\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}